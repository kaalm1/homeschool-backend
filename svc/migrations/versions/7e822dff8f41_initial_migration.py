"""initial migration

Revision ID: 7e822dff8f41
Revises: 
Create Date: 2025-09-10 20:29:49.264423

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7e822dff8f41'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('google_id', sa.String(length=100), nullable=True),
    sa.Column('google_avatar_url', sa.String(length=500), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('state', sa.String(length=50), nullable=True),
    sa.Column('zip_code', sa.String(length=20), nullable=True),
    sa.Column('country', sa.String(length=50), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('location_updated_at', sa.DateTime(), nullable=True),
    sa.Column('location_accuracy', sa.Float(), nullable=True),
    sa.Column('family_size', sa.Integer(), nullable=True),
    sa.Column('has_car', sa.Boolean(), nullable=False),
    sa.Column('max_travel_distance', sa.Integer(), nullable=True),
    sa.Column('weekly_activity_budget', sa.Float(), nullable=True),
    sa.Column('max_activities_per_week', sa.Integer(), nullable=False),
    sa.Column('family_profile_updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_city'), 'users', ['city'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_google_id'), 'users', ['google_id'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_zip_code'), 'users', ['zip_code'], unique=False)
    op.create_table('kids',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('dob', sa.DATE(), nullable=True),
    sa.Column('interests', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('special_needs', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('color', sa.String(length=7), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['parent_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_kids_id'), 'kids', ['id'], unique=False)
    op.create_index(op.f('ix_kids_parent_id'), 'kids', ['parent_id'], unique=False)
    op.create_table('activities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('done', sa.Boolean(), nullable=False),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('price_verified', sa.Boolean(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('location_verified', sa.Boolean(), nullable=True),
    sa.Column('primary_type', postgresql.ENUM('AMUSEMENT_PARK', 'ARTS_CRAFTS', 'BOARD_GAMES', 'CLASSES', 'DANCE', 'FESTIVAL', 'GAMES', 'GARDENING', 'HIKING', 'INDOOR', 'MUSIC', 'OUTDOOR', 'PARK', 'PUZZLES', 'SCIENCE_TECH', 'STORYTELLING', 'TRAVEL', 'VIDEO_GAMES', 'VOLUNTEERING', 'SPORTS', 'ZOO_AQUARIUM', name='activity_type_enum'), nullable=True),
    sa.Column('primary_theme', postgresql.ENUM('ADVENTURE', 'CREATIVE', 'EDUCATIONAL', 'FITNESS', 'FOOD_DRINK', 'FESTIVE', 'MINDFULNESS', 'NATURE', 'RELAXATION', 'SOCIAL', name='theme_enum'), nullable=True),
    sa.Column('website', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('assigned_to_kid_id', sa.Integer(), nullable=True),
    sa.Column('costs', sa.ARRAY(postgresql.ENUM('FREE', 'LOW', 'MEDIUM', 'HIGH', name='cost_enum')), nullable=True),
    sa.Column('durations', sa.ARRAY(postgresql.ENUM('SHORT', 'MEDIUM', 'LONG', 'FULL_DAY', 'MULTI_DAY', name='duration_enum')), nullable=True),
    sa.Column('participants', sa.ARRAY(postgresql.ENUM('SOLO', 'TWO_PLAYER', 'SMALL_GROUP', 'MEDIUM_GROUP', 'LARGE_GROUP', 'FAMILY', name='participants_enum')), nullable=True),
    sa.Column('locations', sa.ARRAY(postgresql.ENUM('HOME_INDOOR', 'HOME_OUTDOOR', 'LOCAL', 'REGIONAL', 'TRAVEL', name='location_enum')), nullable=True),
    sa.Column('seasons', sa.ARRAY(postgresql.ENUM('ALL', 'SPRING', 'SUMMER', 'FALL', 'WINTER', 'RAINY_DAY', 'SNOWY_DAY', name='season_enum')), nullable=True),
    sa.Column('age_groups', sa.ARRAY(postgresql.ENUM('TODDLER', 'CHILD', 'TWEEN', 'TEEN', 'ADULT', 'FAMILY', name='age_group_enum')), nullable=True),
    sa.Column('frequency', sa.ARRAY(postgresql.ENUM('DAILY', 'MULTIPLE_TIMES_WEEK', 'WEEKLY', 'BIWEEKLY', 'MONTHLY', 'SEVERAL_TIMES_YEAR', 'SEASONAL', 'ANNUALLY', name='frequency_enum')), nullable=True),
    sa.Column('themes', sa.ARRAY(postgresql.ENUM('ADVENTURE', 'CREATIVE', 'EDUCATIONAL', 'FITNESS', 'FOOD_DRINK', 'FESTIVE', 'MINDFULNESS', 'NATURE', 'RELAXATION', 'SOCIAL', name='theme_enum')), nullable=True),
    sa.Column('activity_types', sa.ARRAY(postgresql.ENUM('AMUSEMENT_PARK', 'ARTS_CRAFTS', 'BOARD_GAMES', 'CLASSES', 'DANCE', 'FESTIVAL', 'GAMES', 'GARDENING', 'HIKING', 'INDOOR', 'MUSIC', 'OUTDOOR', 'PARK', 'PUZZLES', 'SCIENCE_TECH', 'STORYTELLING', 'TRAVEL', 'VIDEO_GAMES', 'VOLUNTEERING', 'SPORTS', 'ZOO_AQUARIUM', name='activity_type_enum')), nullable=True),
    sa.Column('activity_scale', postgresql.ENUM('SMALL', 'MEDIUM', 'LARGE', 'EXTRA_LARGE', name='activity_scale_enum'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['assigned_to_kid_id'], ['kids.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_activities_assigned_to_kid_id'), 'activities', ['assigned_to_kid_id'], unique=False)
    op.create_index(op.f('ix_activities_id'), 'activities', ['id'], unique=False)
    op.create_index(op.f('ix_activities_user_id'), 'activities', ['user_id'], unique=False)
    op.create_table('week_activities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('activity_id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('week', sa.Integer(), nullable=False),
    sa.Column('completed', sa.Boolean(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['activity_id'], ['activities.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'activity_id', 'year', 'week', name='uq_user_activity_week')
    )
    op.create_index(op.f('ix_week_activities_activity_id'), 'week_activities', ['activity_id'], unique=False)
    op.create_index(op.f('ix_week_activities_user_id'), 'week_activities', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_week_activities_user_id'), table_name='week_activities')
    op.drop_index(op.f('ix_week_activities_activity_id'), table_name='week_activities')
    op.drop_table('week_activities')
    op.drop_index(op.f('ix_activities_user_id'), table_name='activities')
    op.drop_index(op.f('ix_activities_id'), table_name='activities')
    op.drop_index(op.f('ix_activities_assigned_to_kid_id'), table_name='activities')
    op.drop_table('activities')
    op.drop_index(op.f('ix_kids_parent_id'), table_name='kids')
    op.drop_index(op.f('ix_kids_id'), table_name='kids')
    op.drop_table('kids')
    op.drop_index(op.f('ix_users_zip_code'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_google_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_city'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
